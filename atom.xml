<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>1024-HOPE</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-10T13:08:19.128Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zhangweilong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>APT</title>
    <link href="http://yoursite.com/2019/01/10/apt/"/>
    <id>http://yoursite.com/2019/01/10/apt/</id>
    <published>2019-01-10T02:04:33.799Z</published>
    <updated>2019-01-10T13:08:19.128Z</updated>
    
    <content type="html"><![CDATA[<h2 id="APT"><a href="#APT" class="headerlink" title="APT"></a>APT</h2><p>友情链接：</p><p><a href="https://lizhaoxuan.github.io/2016/07/17/apt-Grammar-explanation/" target="_blank" rel="noopener">https://lizhaoxuan.github.io/2016/07/17/apt-Grammar-explanation/</a></p><p><a href="https://github.com/Gavin-ZYX/APTTest.git" target="_blank" rel="noopener">https://github.com/Gavin-ZYX/APTTest.git</a></p><h3 id="apt"><a href="#apt" class="headerlink" title="apt"></a>apt</h3><p>APT(Annotation Processing Tool)是一种处理注释的工具，它对源代码文件进行检测找出其中的Annotation，根据注释自动生成代码。Annotation处理器在出来Annotation时可以根据源文件中的Annotation生成额外的源文件和其它的文件（文件具体内容由Annotation处理器的编写者决定），APT还会编译生成的源文件和原来的源文件，将它们一起生成class文件。</p><h3 id="annotationProcessor"><a href="#annotationProcessor" class="headerlink" title="annotationProcessor"></a>annotationProcessor</h3><p>annotationProcessor是APT工具中的一种，他是google开发的内置框架，不需要引入，可以直接在build.gradle文件中使用</p><h3 id="android-apt"><a href="#android-apt" class="headerlink" title="android-apt"></a>android-apt</h3><p>android-apt是由一位开发者自己开发的apt框架，源代码托管在这里，随着Android Gradle 插件 2.2 版本的发布，Android Gradle 插件提供了名为 annotationProcessor 的功能来完全代替 android-apt ，自此android-apt 作者在官网发表声明最新的Android Gradle插件现在已经支持annotationProcessor，并警告和或阻止android-apt ，并推荐大家使用 Android 官方插件annotationProcessor。</p><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><h3 id="module"><a href="#module" class="headerlink" title="module"></a>module</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-annotation (java-library)</span><br><span class="line">apt-processor  (java-library)</span><br><span class="line">apt-library    (com.android.library)</span><br></pre></td></tr></table></figure><h3 id="apt-annotation"><a href="#apt-annotation" class="headerlink" title="apt-annotation"></a>apt-annotation</h3><blockquote><p>注解类BindView(编译时注解)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@Retention(RetentionPolicy.CLASS)</span><br><span class="line">@Target(ElementType.FIELD)</span><br><span class="line">public @interface BindView &#123;</span><br><span class="line">    int value();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>build.gradle</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: &apos;java-library&apos;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    implementation fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sourceCompatibility = &quot;1.7&quot;</span><br><span class="line">targetCompatibility = &quot;1.7&quot;</span><br></pre></td></tr></table></figure><h3 id="apt-processor"><a href="#apt-processor" class="headerlink" title="apt-processor"></a>apt-processor</h3><blockquote><p>build.gradle</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: &apos;java-library&apos;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    implementation fileTree(include: [&apos;*.jar&apos;], dir: &apos;libs&apos;)</span><br><span class="line">    implementation &apos;com.google.auto.service:auto-service:1.0-rc2&apos;</span><br><span class="line">    implementation &apos;com.squareup:javapoet:1.10.0&apos;</span><br><span class="line">    implementation project(&apos;:apt-annotation&apos;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sourceCompatibility = &quot;1.7&quot;</span><br><span class="line">targetCompatibility = &quot;1.7&quot;</span><br></pre></td></tr></table></figure><blockquote><p>AbstractProcessor</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">@SupportedAnnotationTypes(&#123;&quot;com.example.gavin.apt_annotation.BindView&quot;&#125;)</span><br><span class="line">@AutoService(Processor.class)</span><br><span class="line">public class TestProcessor extends AbstractProcessor &#123;</span><br><span class="line">  @Override</span><br><span class="line">  public synchronized void init(ProcessingEnvironment processingEnvironment) &#123;</span><br><span class="line">    super.init(processingEnvironment);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public Set&lt;String&gt; getSupportedAnnotationTypes() &#123;</span><br><span class="line">    return super.getSupportedAnnotationTypes();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public SourceVersion getSupportedSourceVersion() &#123;</span><br><span class="line">    return super.getSupportedSourceVersion();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public boolean process(Set&lt;? extends TypeElement&gt; set, RoundEnvironment roundEnvironment) &#123;</span><br><span class="line">    return false;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加自己需要处理的注解，可以通过两种方式：getSupportedAnnotationTypes()或者直接用注解<br>@SupportedAnnotationTypes(“全路径”)</p><blockquote><p>process方法</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">mMessager.printMessage(Diagnostic.Kind.NOTE, &quot;processing...&quot;);</span><br><span class="line">// 1.会执行多次，所以要先clear</span><br><span class="line">    mProxyMap.clear();</span><br><span class="line">    // 2.得到所有的注解并收集到map中</span><br><span class="line">    Set&lt;? extends Element&gt; elements = roundEnvironment.getElementsAnnotatedWith(BindView.class);</span><br><span class="line">    for (Element element : elements) &#123;</span><br><span class="line">      VariableElement variableElement = (VariableElement) element;</span><br><span class="line">      TypeElement classElement = (TypeElement) variableElement.getEnclosingElement();</span><br><span class="line">      String fullClassName = classElement.getQualifiedName().toString();</span><br><span class="line"></span><br><span class="line">      //elements的信息保存到mProxyMap中</span><br><span class="line">      ClassCreatorProxy proxy = mProxyMap.get(fullClassName);</span><br><span class="line">      if (proxy == null) &#123;</span><br><span class="line">        proxy = new ClassCreatorProxy(mElementUtils, classElement);</span><br><span class="line">        mProxyMap.put(fullClassName, proxy);</span><br><span class="line">      &#125;</span><br><span class="line">      BindView bindAnnotation = variableElement.getAnnotation(BindView.class);</span><br><span class="line">      int id = bindAnnotation.value();</span><br><span class="line">      proxy.putElement(id, variableElement);</span><br><span class="line">    &#125;</span><br><span class="line">    // 3.通过遍历mProxyMap，创建java文件 通过javapoet生成</span><br><span class="line">    for (String key : mProxyMap.keySet()) &#123;</span><br><span class="line">      ClassCreatorProxy proxyInfo = mProxyMap.get(key);</span><br><span class="line">      JavaFile javaFile = JavaFile.builder(proxyInfo.getPackageName(), proxyInfo.generateJavaCode2()).build();</span><br><span class="line">      try &#123;</span><br><span class="line">        //　生成文件</span><br><span class="line">        javaFile.writeTo(mFiler);</span><br><span class="line">      &#125; catch (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    mMessager.printMessage(Diagnostic.Kind.NOTE, &quot;process finish ...&quot;);</span><br><span class="line">    return true;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;APT&quot;&gt;&lt;a href=&quot;#APT&quot; class=&quot;headerlink&quot; title=&quot;APT&quot;&gt;&lt;/a&gt;APT&lt;/h2&gt;&lt;p&gt;友情链接：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://lizhaoxuan.github.io/2016/07/17/apt-
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/01/09/hello-world/"/>
    <id>http://yoursite.com/2019/01/09/hello-world/</id>
    <published>2019-01-09T13:57:38.096Z</published>
    <updated>2019-01-10T03:27:27.309Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h3 id="直接下面一句话："><a href="#直接下面一句话：" class="headerlink" title="直接下面一句话："></a>直接下面一句话：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
